version: 3

dotenv: [".env"]

vars:
  APP: app_name

tasks:
  default:
    desc: help
    cmds:
      - task: terraform
        silent: true

  gen:
    desc: generate terraform config
    summary: |
      Generate terraform config.

      Usage:
        task gen [--flags]

      Examples:
        $ task gen CHDIR=env/stg/network STAGE=stg
    vars:
      PATH:
        sh: echo {{.CHDIR}} | cut -d "/" -f2-
    cmds:
      - app={{.APP}} stage={{.STAGE}} path={{.PATH}} envsubst < terraform/config/config.tpl.tf > terraform/env/{{.PATH}}/config.tf

  init:
    desc: generate terraform config
    summary: |
      Initialize terraform.

      Usage:
        task init [--flags]

      Examples:
        $ task init CHDIR=env/stg/network STAGE=stg
    cmds:
      - terraform -chdir={{.CHDIR}} init

  fmt:
    desc: terraform fmt
    cmds:
      - terraform fmt -recursive

  terraform:
    desc: run terraform command
    deps:
      - task: gen
        vars:
          CHDIR: "{{.CHDIR}}"
      - task: init
        vars:
          CHDIR: "{{.CHDIR}}"
    vars:
      CHDIR:
        sh: |
          s="{{.CHDIR}}"
          if [[ $s == */ ]]; then s=${s::-1}; fi
          echo $s
    preconditions:
      - sh: |
          account=$(aws sts get-caller-identity --query Account --output text)
          [ $account = $AWS_ACCOUNT_ID ]
        msg: AWS_PROFILE is not {{.APP}}
    cmds:
      - task: fmt
      - terraform -chdir={{.CHDIR}} {{.CLI_ARGS}}
